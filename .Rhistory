dplyr::anti_join(eastern_ded_fed, by = "date") %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date))
fed_states %>%
dplyr::anti_join(fixed_state, by = c("date", "level")) %>%
dplyr::anti_join(eastern_ded_state, by = c("date", "level")) %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date))
fed_states %>%
dplyr::anti_join(fixed_state, by = c("date", "level")) %>%
dplyr::anti_join(eastern_ded_state, by = c("date", "level")) %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date)) %>%
dplyr::distinct()
start <- paste0("01-01-", min(Y))
end <- paste0("31-12-", max(Y))
fed_hol <- dplyr::bind_rows(fixed_federal_holidays(Y),
easter_deduct_federal(eastern = gauss_easter(Y)),
data.frame(date = gauss_easter(Y), level = "federal"))
all_days <- init_dates(start = start, end = end)
fed_hol
fixed_fed_states <- federal_states_days(Y)
dplyr::bind_rows(fixed_fed_states,
fixed_state_holidays(Y),
easter_deduct_state(eastern = gauss_easter(Y)))
dplyr::bind_rows(fixed_fed_states,
fixed_state_holidays(Y),
easter_deduct_state(eastern = gauss_easter(Y))) %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date))
dplyr::bind_rows(fixed_fed_states,
fixed_state_holidays(Y),
easter_deduct_state(eastern = gauss_easter(Y))) %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date)) %>%
dplyr::distinct()
devtools::document()
library(CHworkdays)
workdays(Y)
workdays(Y = 2021)
workdays(Y = 2021, state_level = T)
holidays
holidays(Y = 2021)
holidays(Y = 2021, state_level = T)
fed_wd
fed_wd <- without_we %>%
dplyr::anti_join(fixed_fed, by = "date") %>%
dplyr::anti_join(eastern_ded_fed, by = "date")
#' Title
#'
#' @param Y
#'
#' @return
#'
#'
#' @examples
gauss_easter <- function(Y) {
a = Y %% 19
b = Y %% 4
c = Y %% 7
d = (19 * a + 24) %% 30
e = (2 * b + 4 * c + 6 * d + 5) %% 7
OT = 22 + d + e
OM = rep(3, length(OT))
for(i in 1:length(OT)) {
if(OT[i] > 31) {
OT[i] = d[i] + e[i] - 9
OM[i] = 4
}
if(OT[i] == 26 & OM[i] == 4) {
OT[i] = 19
}
if(OT[i] == 25 & OM[i] == 4 & d[i] == 28 & e[i] == 6 & a[i] > 10) {
OT[i] = 18
}
}
data.frame(day = OT, month = OM, year = Y) %>%
dplyr::mutate(date = lubridate::dmy(paste(day, month, year, sep = "-"))) %>%
.$date
}
#' Title
#'
#' @param eastern
#'
#' @return
#' @export
#'
#' @examples
easter_deduct_state <- function(eastern) {
holidays <- read_data_ch()[[2]] %>%
dplyr::filter(holiday) %>%
dplyr::select(Datum, level)
easter_m <- data.frame(Datum = "Ostermontag", date = eastern + 1)
easter_f <- data.frame(Datum = "Karfreitag", date = eastern - 2)
ch <- data.frame(Datum = "Christi Himmelfahrt", date = eastern + 39)
pm <- data.frame(Datum = "Pfingstmontag", date = eastern + 50)
holidays %>%
dplyr::left_join(easter_m, by = "Datum") %>%
dplyr::left_join(easter_f, by = "Datum") %>%
dplyr::left_join(ch, by = "Datum") %>%
dplyr::left_join(pm, by = "Datum") %>%
tidyr::pivot_longer(cols = -c(Datum, level),
names_to = "col",
values_to = "date") %>%
dplyr::filter(!is.na(date)) %>%
dplyr::select(date, level)
}
#' Title
#'
#' @param eastern
#'
#' @return
#'
#'
#' @examples
easter_deduct_federal <- function(eastern) {
fixed_holidays <- read_data_ch()[[2]] %>%
dplyr::filter(federal_holiday) %>%
dplyr::distinct(Datum)
easter_m <- data.frame(Datum = "Ostermontag", date = eastern + 1)
easter_f <- data.frame(Datum = "Karfreitag", date = eastern - 2)
ch <- data.frame(Datum = "Christi Himmelfahrt", date = eastern + 39)
pm <- data.frame(Datum = "Pfingstmontag", date = eastern + 50)
fixed_holidays %>%
dplyr::left_join(easter_m, by = "Datum") %>%
dplyr::left_join(easter_f, by = "Datum") %>%
dplyr::left_join(ch, by = "Datum") %>%
dplyr::left_join(pm, by = "Datum") %>%
tidyr::pivot_longer(cols = -Datum,
names_to = "col",
values_to = "date") %>%
dplyr::filter(!is.na(date)) %>%
dplyr::select(date) %>%
dplyr::mutate(level = "federal")
}
#' Title
#'
#' @param Y
#'
#' @return
#'
#'
#' @examples
fixed_state_holidays <- function(Y) {
state_hols <- read_data_ch()[[1]] %>%
dplyr::filter(!federal_holiday & holiday)
states_years <- expand.grid(level = unique(state_hols$level), year = Y)
state_hols %>%
dplyr::left_join(states_years, by = "level") %>%
dplyr::mutate(date = paste(day, year, sep = "-")) %>%
dplyr::mutate(date = lubridate::dmy(date)) %>%
dplyr::select(date, level)
}
#' Title
#'
#' @param days
#'
#' @return
#'
#'
#' @examples
federal_states_days <- function(Y) {
fed_hols <- read_data_ch()[[1]] %>%
dplyr::filter(federal_holiday)
states_years <- expand.grid(level = unique(fed_hols$level), year = Y)
fed_hols %>%
dplyr::left_join(states_years, by = "level") %>%
dplyr::mutate(date = paste(day, year, sep = "-")) %>%
dplyr::mutate(date = lubridate::dmy(date)) %>%
dplyr::select(date, level)
}
#' Title
#'
#' @return
#'
#'
#' @examples
fixed_federal_holidays <- function(Y) {
days <- c("01-01",
"01-08",
"25-12")
dates <- expand.grid(days, Y) %>%
dplyr::mutate(date = lubridate::dmy(paste(Var1, Var2, sep = "-"))) %>%
.$date
data.frame(date = dates, level = "federal")
}
#' Title
#'
#' @param start
#' @param end
#'
#' @return
#'
#'
#' @examples
init_dates <- function(start, end) {
start_date <- lubridate::dmy(start)
end_date <- lubridate::dmy(end)
n_days <- lubridate::interval(start_date, end_date)/lubridate::days(1)
start_date + lubridate::days(0:n_days)
}
fed_wd <- without_we %>%
dplyr::anti_join(fixed_fed, by = "date") %>%
dplyr::anti_join(eastern_ded_fed, by = "date")
start <- paste0("01-01-", min(Y))
end <- paste0("31-12-", max(Y))
all_days <- init_dates(start = start, end = end)
without_we <- data.frame(date = all_days) %>%
dplyr::mutate(weekday = weekdays(date)) %>%
dplyr::filter(!weekday %in% c("Samstag", "Sonntag"))
Y = 2021
start <- paste0("01-01-", min(Y))
end <- paste0("31-12-", max(Y))
all_days <- init_dates(start = start, end = end)
without_we <- data.frame(date = all_days) %>%
dplyr::mutate(weekday = weekdays(date)) %>%
dplyr::filter(!weekday %in% c("Samstag", "Sonntag"))
fixed_fed <- fixed_federal_holidays(Y)
fixed_state <- fixed_state_holidays(Y)
#' Title
#'
#' @return
#'
#'
#' @examples
read_data_ch <- function() {
fixed <- readxl::read_excel(path = "Holidays_CH.xlsx", sheet = 1) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::mutate(day = paste(substr(Datum, 9, 10), substr(Datum, 6, 7), sep = "-")) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup() %>%
dplyr::select(-Datum)
easter <- readxl::read_excel(path = "Holidays_CH.xlsx", sheet = 2) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup()
list(fixed, easter)
}
fixed_fed <- fixed_federal_holidays(Y)
fixed_state <- fixed_state_holidays(Y)
eastern <- gauss_easter(Y)
eastern_ded_fed <- easter_deduct_federal(eastern = eastern)
eastern_ded_state <- easter_deduct_state(eastern = eastern)
eastern_ded_fed
eastern_ded_state
without_we
fixed_fed
eastern_ded_fed
fed_wd <- without_we %>%
dplyr::anti_join(fixed_fed, by = "date") %>%
dplyr::anti_join(eastern_ded_fed, by = "date")
fed_wd
without_we
eastern_ded_fed
fed_states
fed_states <- federal_states_days(Y)
fed_states
fed_states
fed_wd
fed_states <- federal_states_days(Y)
fed_states
fed_wd %>%
dplyr::anti_join(fixed_state, by = c("date", "level")) %>%
dplyr::anti_join(eastern_ded_state, by = c("date", "level")) %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date)) %>%
dplyr::distinct()
fixed_state
fed_wd
fed_wd
states_dates <- expand.grid(date = fed_wd$date, level = unique(read_data_ch()$level))
states_dates
states_dates <- expand.grid(date = fed_wd$date, level = unique(read_data_ch()[[1]]$level))
states_dates
fed_wd %>%
dplyr::left_join(states_dates, by = "date")
states_dates
fed_wd %>%
dplyr::left_join(states_dates, by = "date") %>%
dplyr::anti_join(fixed_state, by = c("date", "level")) %>%
dplyr::anti_join(eastern_ded_state, by = c("date", "level")) %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date)) %>%
dplyr::distinct()
fed_wd %>%
dplyr::left_join(states_dates, by = "date") %>%
dplyr::anti_join(fixed_state, by = c("date", "level")) %>%
dplyr::anti_join(eastern_ded_state, by = c("date", "level")) %>%
dplyr::mutate(year = lubridate::year(date),
month = lubridate::month(date),
day = lubridate::day(date)) %>%
dplyr::distinct()
devtools::document()
library(CHworkdays)
workdays(Y = 2021)
workdays(Y = 2021, state_level = T)
devtools::document()
library(CHworkdays)
devtools::document()
library(CHworkdays)
devtools::document()
library(CHworkdays)
federal_workdays_weighted(Y = 2021)
devtools::document()
federal_workdays_weighted(2021)
library(CHworkdays)
read_data_ch <- function() {
fixed <- readxl::read_excel(path = "data/Holidays_CH.xlsx", sheet = 1) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::mutate(day = paste(substr(Datum, 9, 10), substr(Datum, 6, 7), sep = "-")) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup() %>%
dplyr::select(-Datum)
easter <- readxl::read_excel(path = "data/Holidays_CH.xlsx", sheet = 2) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup()
list(fixed, easter)
}
read_data_ch <- function() {
fixed <- readxl::read_excel(path = "data/Holidays_CH.xlsx", sheet = 1) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::mutate(day = paste(substr(Datum, 9, 10), substr(Datum, 6, 7), sep = "-")) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup() %>%
dplyr::select(-Datum)
easter <- readxl::read_excel(path = "data/Holidays_CH.xlsx", sheet = 2) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup()
list(fixed, easter)
}
fixed <- read_data_ch()[[1]]
library(magrittr)
read_data_ch <- function() {
fixed <- readxl::read_excel(path = "data/Holidays_CH.xlsx", sheet = 1) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::mutate(day = paste(substr(Datum, 9, 10), substr(Datum, 6, 7), sep = "-")) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup() %>%
dplyr::select(-Datum)
easter <- readxl::read_excel(path = "data/Holidays_CH.xlsx", sheet = 2) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup()
list(fixed, easter)
}
fixed <- read_data_ch()[[1]]
fixed
eastern <- read_data_ch()[[2]]
?use_data
usethis::use_data(fixed, eastern, internal = TRUE)
devtools::document()
devtools::document()
devtools::document()
library(CHworkdays)
CHworkdays::federal_workdays_weighted(Y = 2021)
devtools::document()
library(CHworkdays)
federal_workdays_weighted(2021)
library(CHworkdays)
devtools::document()
library(CHworkdays)
federal_workdays_weighted(2021)
library(magrittr)
read_data_ch <- function() {
fixed <- readxl::read_excel(path = "~/GitHub/Holidays_CH.xlsx", sheet = 1) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::mutate(day = paste(substr(Datum, 9, 10), substr(Datum, 6, 7), sep = "-")) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup() %>%
dplyr::select(-Datum)
easter <- readxl::read_excel(path = "~/GitHub/Holidays_CH.xlsx", sheet = 2) %>%
tidyr::pivot_longer(cols = - Datum,
names_to = "level",
values_to = "holiday") %>%
dplyr::mutate(holiday = dplyr::case_when(
holiday %in% c("A", "B", "C", "D", "c") ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::mutate(Datum = as.character(Datum)) %>%
dplyr::group_by(Datum) %>%
dplyr::mutate(federal_holiday = mean(holiday)) %>%
dplyr::mutate(federal_holiday = dplyr::case_when(
federal_holiday == 1 ~ TRUE,
TRUE ~ FALSE
)) %>%
dplyr::ungroup()
list(fixed, easter)
}
fixed <- read_data_ch()[[1]]
eastern <- read_data_ch()[[2]]
fixed
eastern
devtools::document()
devtools::document()
library(CHworkdays)
